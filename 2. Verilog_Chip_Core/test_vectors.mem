// test_vectors.mem - Test vectors for Virtual Chip Signature System
// Contains known cryptographic test cases for validation
// Format: [message_hash][private_key][expected_signature_r][expected_signature_s][recovery_id]
// Author: Virtual Chip Signature System

// Test Vector 1: Standard ECDSA test case
// Message: "Hello World!"
// Private Key: 0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
// Expected Signature: r=0x2B42F576D07F4165FF65D7495BF1B3C1602B8D4E3A8E2829515DBAE110E90859
//                     s=0x1C5EDCB9247D08E9FCD568F4F52BDF1796028BC33CD52E9D2B8FD7F2D4B5C6D7E
// Recovery ID: 27
A591A6D40BF420404A011733CFB7B190D62C65BF0BCDA32B57B277D9AD9F146E
1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
2B42F576D07F4165FF65D7495BF1B3C1602B8D4E3A8E2829515DBAE110E90859
1C5EDCB9247D08E9FCD568F4F52BDF1796028BC33CD52E9D2B8FD7F2D4B5C6D7E
1B

// Test Vector 2: Ethereum transaction test case
// Message: "Transfer 1 ETH to 0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6"
// Private Key: 0xF8F8A2F43C8376CCB0871305060D7B27B0554D2CC72BCCF41B2705608452F318
// Expected Signature: r=0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
//                     s=0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
// Recovery ID: 28
8C3A55C4734161763D20B4C8D5D7F3B1C9E2A8F6D4C7B0A3E9F2D5C8B1A4E7F
F8F8A2F43C8376CCB0871305060D7B27B0554D2CC72BCCF41B2705608452F318
6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
1C

// Test Vector 3: Zero message test case
// Message: All zeros (edge case)
// Private Key: 0x0000000000000000000000000000000000000000000000000000000000000001
// Expected Signature: r=0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
//                     s=0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8
// Recovery ID: 27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001
79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8
1B

// Test Vector 4: Maximum values test case
// Message: All ones (edge case)
// Private Key: 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
// Expected Signature: r=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
//                     s=0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
// Recovery ID: 28
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364140
1C

// Test Vector 5: Random test case
// Message: Random hash
// Private Key: 0x5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A
// Expected Signature: r=0x7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A
//                     s=0x8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B
// Recovery ID: 27
9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C
5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A
7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A
8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B
1B

// Test Vector 6: Keccak-256 test case
// Input: "abc"
// Expected Hash: 0x4e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c45
4E03657AEA45A94FC7D47BA826C8D667C0D1E6E33A64A036EC44F58FA12D6C45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00

// Test Vector 7: Keccak-256 test case
// Input: "The quick brown fox jumps over the lazy dog"
// Expected Hash: 0x4d741b6f1eb29cb2a9b9911c832f3acf2c735e9bda6da11df8b4301c2083d718
4D741B6F1EB29CB2A9B9911C832F3ACF2C735E9BDA6DA11DF8B4301C2083D718
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00

// Test Vector 8: Empty string Keccak-256
// Input: ""
// Expected Hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470
C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00

// Test Vector 9: Modular arithmetic test case
// a = 0x1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
// b = 0xFEDCBA0987654321FEDCBA0987654321FEDCBA0987654321FEDCBA0987654321
// modulus = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F (secp256k1 P)
// Expected: (a + b) mod P
1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
FEDCBA0987654321FEDCBA0987654321FEDCBA0987654321FEDCBA0987654321
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F
0000000000000000000000000000000000000000000000000000000000000000
00

// Test Vector 10: Public key generation test case
// Private Key: 0x0000000000000000000000000000000000000000000000000000000000000001
// Expected Public Key X: 0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
// Expected Public Key Y: 0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001
79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8
00 