{"version":3,"file":"main.2db9463c4e39c7d2f00b.js","mappings":"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","sources":["webpack://virtual-chip-signature-system/./ui_feedback_module/Result_Display.js","webpack://virtual-chip-signature-system/./ui_feedback_module/Receipt_Processor.js","webpack://virtual-chip-signature-system/webpack/bootstrap","webpack://virtual-chip-signature-system/webpack/runtime/define property getters","webpack://virtual-chip-signature-system/webpack/runtime/harmony module decorator","webpack://virtual-chip-signature-system/webpack/runtime/hasOwnProperty shorthand","webpack://virtual-chip-signature-system/./frontend_ui/developer_debug_ui/debugLogConsole.js","webpack://virtual-chip-signature-system/./frontend_ui/metamask_integration/connectWallet.js","webpack://virtual-chip-signature-system/./frontend_ui/session_handler/assignSessionID.js","webpack://virtual-chip-signature-system/./frontend_ui/js_memory/storeTempData.js","webpack://virtual-chip-signature-system/./frontend_ui/format_handler/jsonToMemFormat.js","webpack://virtual-chip-signature-system/./src/main.js"],"sourcesContent":["/**\n * UI_Feedback_Module - Result_Display.js\n * Displays signature results, transaction status, and user feedback\n * Provides beautiful and informative UI for system outputs\n */\n\nclass ResultDisplay {\n    constructor(containerId = \"result-display\", options = {}) {\n        this.containerId = containerId;\n        this.container = null;\n        this.options = {\n            theme: \"dark\",\n            animations: true,\n            autoHide: true,\n            autoHideDelay: 5000,\n            maxResults: 10,\n            ...options\n        };\n        \n        this.results = [];\n        this.currentResult = null;\n        this.autoHideTimer = null;\n        \n        this.init();\n    }\n\n    /**\n     * Initialize result display\n     */\n    init() {\n        this.createContainer();\n        this.createUI();\n        this.bindEvents();\n        this.applyTheme();\n    }\n\n    /**\n     * Create result display container\n     */\n    createContainer() {\n        // Remove existing container if any\n        const existing = document.getElementById(this.containerId);\n        if (existing) {\n            existing.remove();\n        }\n\n        // Create new container\n        this.container = document.createElement(\"div\");\n        this.container.id = this.containerId;\n        this.container.className = \"result-display-container\";\n        this.container.style.cssText = `\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            width: 450px;\n            max-height: 80vh;\n            background: #1a1a1a;\n            color: #ffffff;\n            font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n            z-index: 10000;\n            border-radius: 10px;\n            box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n            overflow: hidden;\n            display: none;\n            transition: all 0.3s ease;\n        `;\n\n        document.body.appendChild(this.container);\n    }\n\n    /**\n     * Create result display UI\n     */\n    createUI() {\n        // Header\n        const header = document.createElement(\"div\");\n        header.className = \"result-header\";\n        header.style.cssText = `\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 15px 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            border-bottom: 1px solid #333;\n        `;\n\n        const title = document.createElement(\"h3\");\n        title.textContent = \"🎯 Signature Results\";\n        title.style.cssText = `\n            margin: 0;\n            color: white;\n            font-size: 18px;\n            font-weight: 600;\n        `;\n\n        const controls = document.createElement(\"div\");\n        controls.style.display = \"flex\";\n        controls.gap = \"10px\";\n\n        // Minimize button\n        const minimizeBtn = document.createElement(\"button\");\n        minimizeBtn.innerHTML = \"−\";\n        minimizeBtn.onclick = () => this.minimize();\n        minimizeBtn.style.cssText = `\n            background: rgba(255,255,255,0.2);\n            color: white;\n            border: none;\n            padding: 5px 10px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: bold;\n        `;\n\n        // Close button\n        const closeBtn = document.createElement(\"button\");\n        closeBtn.innerHTML = \"×\";\n        closeBtn.onclick = () => this.hide();\n        closeBtn.style.cssText = `\n            background: rgba(255,255,255,0.2);\n            color: white;\n            border: none;\n            padding: 5px 10px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 18px;\n            font-weight: bold;\n        `;\n\n        controls.appendChild(minimizeBtn);\n        controls.appendChild(closeBtn);\n        header.appendChild(title);\n        header.appendChild(controls);\n\n        // Content area\n        const content = document.createElement(\"div\");\n        content.className = \"result-content\";\n        content.style.cssText = `\n            padding: 20px;\n            max-height: 60vh;\n            overflow-y: auto;\n        `;\n        this.content = content;\n\n        // Status bar\n        const statusBar = document.createElement(\"div\");\n        statusBar.className = \"result-status\";\n        statusBar.style.cssText = `\n            background: #2a2a2a;\n            padding: 10px 20px;\n            border-top: 1px solid #333;\n            font-size: 12px;\n            color: #ccc;\n            display: flex;\n            justify-content: space-between;\n        `;\n        this.statusBar = statusBar;\n\n        // Assemble UI\n        this.container.appendChild(header);\n        this.container.appendChild(content);\n        this.container.appendChild(statusBar);\n\n        this.updateStatus();\n    }\n\n    /**\n     * Bind event listeners\n     */\n    bindEvents() {\n        // Keyboard shortcuts\n        document.addEventListener(\"keydown\", (e) => {\n            if (e.ctrlKey && e.shiftKey && e.key === \"R\") {\n                e.preventDefault();\n                this.toggle();\n            }\n        });\n\n        // Auto-hide functionality\n        this.container.addEventListener(\"mouseenter\", () => {\n            if (this.autoHideTimer) {\n                clearTimeout(this.autoHideTimer);\n                this.autoHideTimer = null;\n            }\n        });\n\n        this.container.addEventListener(\"mouseleave\", () => {\n            if (this.options.autoHide && this.currentResult) {\n                this.autoHideTimer = setTimeout(() => {\n                    this.hide();\n                }, this.options.autoHideDelay);\n            }\n        });\n    }\n\n    /**\n     * Apply theme\n     */\n    applyTheme() {\n        if (this.options.theme === \"light\") {\n            this.container.style.background = \"#ffffff\";\n            this.container.style.color = \"#333333\";\n            this.content.style.background = \"#f5f5f5\";\n        }\n    }\n\n    /**\n     * Display signature result\n     * @param {Object} result - Signature result data\n     */\n    displaySignatureResult(result) {\n        this.currentResult = result;\n        this.results.unshift(result);\n        \n        // Limit results\n        if (this.results.length > this.options.maxResults) {\n            this.results.pop();\n        }\n\n        this.renderResult(result);\n        this.show();\n        this.updateStatus();\n    }\n\n    /**\n     * Display transaction result\n     * @param {Object} result - Transaction result data\n     */\n    displayTransactionResult(result) {\n        this.currentResult = result;\n        this.results.unshift(result);\n        \n        if (this.results.length > this.options.maxResults) {\n            this.results.pop();\n        }\n\n        this.renderTransactionResult(result);\n        this.show();\n        this.updateStatus();\n    }\n\n    /**\n     * Display error result\n     * @param {Object} error - Error data\n     */\n    displayError(error) {\n        const errorResult = {\n            type: \"error\",\n            timestamp: new Date().toISOString(),\n            message: error.message || \"An error occurred\",\n            details: error.details || error,\n            severity: error.severity || \"error\"\n        };\n\n        this.currentResult = errorResult;\n        this.results.unshift(errorResult);\n        \n        if (this.results.length > this.options.maxResults) {\n            this.results.pop();\n        }\n\n        this.renderError(errorResult);\n        this.show();\n        this.updateStatus();\n    }\n\n    /**\n     * Render signature result\n     * @param {Object} result - Signature result\n     */\n    renderResult(result) {\n        this.content.innerHTML = \"\";\n\n        const resultCard = document.createElement(\"div\");\n        resultCard.className = \"result-card signature-result\";\n        resultCard.style.cssText = `\n            background: #2a2a2a;\n            border-radius: 8px;\n            padding: 20px;\n            margin-bottom: 15px;\n            border-left: 4px solid #00ff00;\n        `;\n\n        // Header\n        const header = document.createElement(\"div\");\n        header.style.cssText = `\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n        `;\n\n        const title = document.createElement(\"h4\");\n        title.textContent = \"✅ Signature Generated\";\n        title.style.cssText = `\n            margin: 0;\n            color: #00ff00;\n            font-size: 16px;\n        `;\n\n        const timestamp = document.createElement(\"span\");\n        timestamp.textContent = new Date(result.timestamp).toLocaleTimeString();\n        timestamp.style.cssText = `\n            color: #888;\n            font-size: 12px;\n        `;\n\n        header.appendChild(title);\n        header.appendChild(timestamp);\n\n        // Signature details\n        const details = document.createElement(\"div\");\n        details.style.cssText = `\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n            margin-bottom: 15px;\n        `;\n\n        // Hash\n        const hashSection = this.createDetailSection(\"Hash\", result.hash, \"hash\");\n        details.appendChild(hashSection);\n\n        // Signature components\n        const signatureSection = this.createDetailSection(\"Signature\", {\n            R: result.signature?.r?.substring(0, 16) + \"...\",\n            S: result.signature?.s?.substring(0, 16) + \"...\",\n            V: result.signature?.v\n        }, \"signature\");\n        details.appendChild(signatureSection);\n\n        // Validation status\n        if (result.validation) {\n            const validationSection = this.createDetailSection(\"Validation\", {\n                Status: result.validation.isValid ? \"✅ Valid\" : \"❌ Invalid\",\n                Errors: result.validation.errors?.length || 0\n            }, \"validation\");\n            details.appendChild(validationSection);\n        }\n\n        // Metadata\n        if (result.metadata && Object.keys(result.metadata).length > 0) {\n            const metadataSection = this.createDetailSection(\"Metadata\", result.metadata, \"metadata\");\n            details.appendChild(metadataSection);\n        }\n\n        // Actions\n        const actions = this.createActionButtons(result);\n        details.appendChild(actions);\n\n        resultCard.appendChild(header);\n        resultCard.appendChild(details);\n\n        this.content.appendChild(resultCard);\n    }\n\n    /**\n     * Render transaction result\n     * @param {Object} result - Transaction result\n     */\n    renderTransactionResult(result) {\n        this.content.innerHTML = \"\";\n\n        const resultCard = document.createElement(\"div\");\n        resultCard.className = \"result-card transaction-result\";\n        resultCard.style.cssText = `\n            background: #2a2a2a;\n            border-radius: 8px;\n            padding: 20px;\n            margin-bottom: 15px;\n            border-left: 4px solid ${result.status === \"SUCCESS\" ? \"#00ff00\" : \"#ff4444\"};\n        `;\n\n        // Header\n        const header = document.createElement(\"div\");\n        header.style.cssText = `\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n        `;\n\n        const title = document.createElement(\"h4\");\n        title.textContent = result.status === \"SUCCESS\" ? \"✅ Transaction Successful\" : \"❌ Transaction Failed\";\n        title.style.cssText = `\n            margin: 0;\n            color: ${result.status === \"SUCCESS\" ? \"#00ff00\" : \"#ff4444\"};\n            font-size: 16px;\n        `;\n\n        const timestamp = document.createElement(\"span\");\n        timestamp.textContent = new Date(result.processedAt).toLocaleTimeString();\n        timestamp.style.cssText = `\n            color: #888;\n            font-size: 12px;\n        `;\n\n        header.appendChild(title);\n        header.appendChild(timestamp);\n\n        // Transaction details\n        const details = document.createElement(\"div\");\n        details.style.cssText = `\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n            margin-bottom: 15px;\n        `;\n\n        // Transaction hash\n        const hashSection = this.createDetailSection(\"Transaction Hash\", result.txHash, \"hash\");\n        details.appendChild(hashSection);\n\n        // Block information\n        const blockSection = this.createDetailSection(\"Block Info\", {\n            Number: result.blockNumber || \"Pending\",\n            Confirmations: result.confirmations || 0,\n            Level: result.analysis?.confirmationLevel || \"Unknown\"\n        }, \"block\");\n        details.appendChild(blockSection);\n\n        // Gas information\n        const gasSection = this.createDetailSection(\"Gas Info\", {\n            Used: result.gasUsed || \"Unknown\",\n            Price: result.effectiveGasPrice ? `${parseInt(result.effectiveGasPrice) / 1e9} Gwei` : \"Unknown\",\n            Efficiency: result.analysis?.gasEfficiency?.efficiency || \"Unknown\"\n        }, \"gas\");\n        details.appendChild(gasSection);\n\n        // Cost information\n        if (result.analysis?.estimatedCost) {\n            const costSection = this.createDetailSection(\"Cost\", {\n                ETH: `${result.analysis.estimatedCost.eth.toFixed(6)} ETH`,\n                USD: `$${result.analysis.estimatedCost.usd.toFixed(2)}`,\n                Gwei: `${result.analysis.estimatedCost.gwei.toFixed(2)} Gwei`\n            }, \"cost\");\n            details.appendChild(costSection);\n        }\n\n        // Actions\n        const actions = this.createTransactionActions(result);\n        details.appendChild(actions);\n\n        resultCard.appendChild(header);\n        resultCard.appendChild(details);\n\n        this.content.appendChild(resultCard);\n    }\n\n    /**\n     * Render error result\n     * @param {Object} error - Error result\n     */\n    renderError(error) {\n        this.content.innerHTML = \"\";\n\n        const errorCard = document.createElement(\"div\");\n        errorCard.className = \"result-card error-result\";\n        errorCard.style.cssText = `\n            background: #2a2a2a;\n            border-radius: 8px;\n            padding: 20px;\n            margin-bottom: 15px;\n            border-left: 4px solid #ff4444;\n        `;\n\n        // Header\n        const header = document.createElement(\"div\");\n        header.style.cssText = `\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 15px;\n        `;\n\n        const title = document.createElement(\"h4\");\n        title.textContent = \"❌ Error Occurred\";\n        title.style.cssText = `\n            margin: 0;\n            color: #ff4444;\n            font-size: 16px;\n        `;\n\n        const timestamp = document.createElement(\"span\");\n        timestamp.textContent = new Date(error.timestamp).toLocaleTimeString();\n        timestamp.style.cssText = `\n            color: #888;\n            font-size: 12px;\n        `;\n\n        header.appendChild(title);\n        header.appendChild(timestamp);\n\n        // Error details\n        const details = document.createElement(\"div\");\n        details.style.cssText = `\n            margin-bottom: 15px;\n        `;\n\n        const message = document.createElement(\"div\");\n        message.textContent = error.message;\n        message.style.cssText = `\n            color: #ff8888;\n            margin-bottom: 10px;\n            font-weight: 500;\n        `;\n\n        if (error.details) {\n            const detailsText = document.createElement(\"pre\");\n            detailsText.textContent = JSON.stringify(error.details, null, 2);\n            detailsText.style.cssText = `\n                background: #1a1a1a;\n                padding: 10px;\n                border-radius: 5px;\n                font-size: 11px;\n                color: #ccc;\n                overflow-x: auto;\n            `;\n            details.appendChild(detailsText);\n        }\n\n        details.appendChild(message);\n\n        // Actions\n        const actions = this.createErrorActions(error);\n        details.appendChild(actions);\n\n        errorCard.appendChild(header);\n        errorCard.appendChild(details);\n\n        this.content.appendChild(errorCard);\n    }\n\n    /**\n     * Create detail section\n     * @param {string} title - Section title\n     * @param {Object|string} data - Section data\n     * @param {string} type - Data type\n     * @returns {HTMLElement} Detail section\n     */\n    createDetailSection(title, data, type) {\n        const section = document.createElement(\"div\");\n        section.style.cssText = `\n            background: #1a1a1a;\n            padding: 15px;\n            border-radius: 5px;\n        `;\n\n        const sectionTitle = document.createElement(\"h5\");\n        sectionTitle.textContent = title;\n        sectionTitle.style.cssText = `\n            margin: 0 0 10px 0;\n            color: #888;\n            font-size: 12px;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        `;\n\n        section.appendChild(sectionTitle);\n\n        if (typeof data === \"string\") {\n            const value = document.createElement(\"div\");\n            value.textContent = data;\n            value.style.cssText = `\n                color: #fff;\n                font-family: \"Courier New\", monospace;\n                font-size: 11px;\n                word-break: break-all;\n            `;\n            section.appendChild(value);\n        } else {\n            Object.entries(data).forEach(([key, value]) => {\n                const item = document.createElement(\"div\");\n                item.style.cssText = `\n                    display: flex;\n                    justify-content: space-between;\n                    margin-bottom: 5px;\n                    font-size: 12px;\n                `;\n\n                const label = document.createElement(\"span\");\n                label.textContent = key;\n                label.style.color = \"#888\";\n\n                const val = document.createElement(\"span\");\n                val.textContent = value;\n                val.style.color = \"#fff\";\n\n                item.appendChild(label);\n                item.appendChild(val);\n                section.appendChild(item);\n            });\n        }\n\n        return section;\n    }\n\n    /**\n     * Create action buttons\n     * @param {Object} result - Result data\n     * @returns {HTMLElement} Action buttons container\n     */\n    createActionButtons(result) {\n        const actions = document.createElement(\"div\");\n        actions.style.cssText = `\n            grid-column: 1 / -1;\n            display: flex;\n            gap: 10px;\n            margin-top: 15px;\n        `;\n\n        // Copy button\n        const copyBtn = document.createElement(\"button\");\n        copyBtn.textContent = \"📋 Copy\";\n        copyBtn.onclick = () => this.copyToClipboard(result);\n        copyBtn.style.cssText = `\n            background: #4444ff;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        // Export button\n        const exportBtn = document.createElement(\"button\");\n        exportBtn.textContent = \"💾 Export\";\n        exportBtn.onclick = () => this.exportResult(result);\n        exportBtn.style.cssText = `\n            background: #44ff44;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        actions.appendChild(copyBtn);\n        actions.appendChild(exportBtn);\n\n        return actions;\n    }\n\n    /**\n     * Create transaction action buttons\n     * @param {Object} result - Transaction result\n     * @returns {HTMLElement} Action buttons container\n     */\n    createTransactionActions(result) {\n        const actions = document.createElement(\"div\");\n        actions.style.cssText = `\n            grid-column: 1 / -1;\n            display: flex;\n            gap: 10px;\n            margin-top: 15px;\n        `;\n\n        // View on explorer\n        const explorerBtn = document.createElement(\"button\");\n        explorerBtn.textContent = \"🔍 Explorer\";\n        explorerBtn.onclick = () => this.openExplorer(result.txHash);\n        explorerBtn.style.cssText = `\n            background: #ff8844;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        // Copy hash\n        const copyBtn = document.createElement(\"button\");\n        copyBtn.textContent = \"📋 Copy Hash\";\n        copyBtn.onclick = () => this.copyToClipboard(result.txHash);\n        copyBtn.style.cssText = `\n            background: #4444ff;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        actions.appendChild(explorerBtn);\n        actions.appendChild(copyBtn);\n\n        return actions;\n    }\n\n    /**\n     * Create error action buttons\n     * @param {Object} error - Error result\n     * @returns {HTMLElement} Action buttons container\n     */\n    createErrorActions(error) {\n        const actions = document.createElement(\"div\");\n        actions.style.cssText = `\n            display: flex;\n            gap: 10px;\n            margin-top: 15px;\n        `;\n\n        // Retry button\n        const retryBtn = document.createElement(\"button\");\n        retryBtn.textContent = \"🔄 Retry\";\n        retryBtn.onclick = () => this.retryOperation(error);\n        retryBtn.style.cssText = `\n            background: #ff8844;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        // Report button\n        const reportBtn = document.createElement(\"button\");\n        reportBtn.textContent = \"📧 Report\";\n        reportBtn.onclick = () => this.reportError(error);\n        reportBtn.style.cssText = `\n            background: #ff4444;\n            color: white;\n            border: none;\n            padding: 8px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 12px;\n            flex: 1;\n        `;\n\n        actions.appendChild(retryBtn);\n        actions.appendChild(reportBtn);\n\n        return actions;\n    }\n\n    /**\n     * Copy to clipboard\n     * @param {Object|string} data - Data to copy\n     */\n    copyToClipboard(data) {\n        const text = typeof data === \"string\" ? data : JSON.stringify(data, null, 2);\n        \n        navigator.clipboard.writeText(text).then(() => {\n            // this.showNotification(\"Copied to clipboard!\", \"success\");\n        }).catch(() => {\n            // this.showNotification(\"Failed to copy\", \"error\");\n        });\n    }\n\n    /**\n     * Export result\n     * @param {Object} result - Result to export\n     */\n    exportResult(result) {\n        const data = {\n            exportTime: new Date().toISOString(),\n            result: result\n        };\n\n        const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `signature-result-${new Date().toISOString().split(\"T\")[0]}.json`;\n        a.click();\n        URL.revokeObjectURL(url);\n\n        // this.showNotification(\"Result exported!\", \"success\");\n    }\n\n    /**\n     * Open explorer\n     * @param {string} txHash - Transaction hash\n     */\n    openExplorer(txHash) {\n        const explorerUrl = `https://sepolia.etherscan.io/tx/${txHash}`;\n        window.open(explorerUrl, \"_blank\");\n    }\n\n    /**\n     * Retry operation\n     * @param {Object} error - Error data\n     */\n    retryOperation(error) {\n        // This would typically trigger a retry event\n        // this.showNotification(\"Retry requested\", \"info\");\n        this.hide();\n    }\n\n    /**\n     * Report error\n     * @param {Object} error - Error data\n     */\n    reportError(error) {\n        // This would typically open an error reporting form\n        // this.showNotification(\"Error reporting not implemented\", \"warning\");\n    }\n\n    /**\n     * Update status bar\n     */\n    updateStatus() {\n        const totalResults = this.results.length;\n        const successCount = this.results.filter(r => r.status === \"SUCCESS\" || r.type === \"signature\").length;\n        const errorCount = this.results.filter(r => r.status === \"ERROR\" || r.type === \"error\").length;\n\n        this.statusBar.innerHTML = `\n            <span>Results: ${totalResults} | Success: ${successCount} | Errors: ${errorCount}</span>\n            <span>${this.currentResult ? new Date(this.currentResult.timestamp || Date.now()).toLocaleTimeString() : \"\"}</span>\n        `;\n    }\n\n    /**\n     * Show result display\n     */\n    show() {\n        this.container.style.display = \"block\";\n        if (this.options.animations) {\n            this.container.style.transform = \"translateX(0)\";\n        }\n    }\n\n    /**\n     * Hide result display\n     */\n    hide() {\n        if (this.options.animations) {\n            this.container.style.transform = \"translateX(100%)\";\n            setTimeout(() => {\n                this.container.style.display = \"none\";\n            }, 300);\n        } else {\n            this.container.style.display = \"none\";\n        }\n    }\n\n    /**\n     * Toggle result display\n     */\n    toggle() {\n        if (this.container.style.display === \"none\") {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    /**\n     * Minimize result display\n     */\n    minimize() {\n        this.container.style.height = \"60px\";\n        this.content.style.display = \"none\";\n    }\n\n    /**\n     * Maximize result display\n     */\n    maximize() {\n        this.container.style.height = \"80vh\";\n        this.content.style.display = \"block\";\n    }\n\n    /**\n     * Clear all results\n     */\n    clear() {\n        this.results = [];\n        this.currentResult = null;\n        this.content.innerHTML = \"\";\n        this.updateStatus();\n    }\n\n    /**\n     * Get result statistics\n     * @returns {Object} Result statistics\n     */\n    getStats() {\n        return {\n            totalResults: this.results.length,\n            byType: this.results.reduce((acc, result) => {\n                const type = result.type || \"unknown\";\n                acc[type] = (acc[type] || 0) + 1;\n                return acc;\n            }, {}),\n            byStatus: this.results.reduce((acc, result) => {\n                const status = result.status || \"unknown\";\n                acc[status] = (acc[status] || 0) + 1;\n                return acc;\n            }, {})\n        };\n    }\n}\n\n// Export the class\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = ResultDisplay;\n}\n\n// Export updateStatus as a named export for compatibility\nconst resultDisplayInstance = new ResultDisplay();\nexport const updateStatus = resultDisplayInstance.updateStatus.bind(resultDisplayInstance);\n","/**\n * UI_Feedback_Module - Receipt_Processor.js\n * Processes blockchain transaction receipts and provides user feedback\n * Handles receipt validation, status tracking, and error reporting\n */\n\nclass ReceiptProcessor {\n    constructor(options = {}) {\n        this.options = {\n            maxRetries: 3,\n            retryDelay: 2000,\n            confirmationBlocks: 1,\n            timeout: 30000,\n            ...options\n        };\n        \n        this.pendingReceipts = new Map();\n        this.processedReceipts = new Map();\n        this.errorHandlers = new Map();\n        this.successHandlers = new Map();\n    }\n\n    /**\n     * Process transaction receipt\n     * @param {string} txHash - Transaction hash\n     * @param {Object} provider - Ethers provider\n     * @param {Object} options - Processing options\n     * @returns {Promise<Object>} Processed receipt\n     */\n    async processReceipt(txHash, provider, options = {}) {\n        const processingOptions = { ...this.options, ...options };\n        \n        try {\n            // Check if already processed\n            if (this.processedReceipts.has(txHash)) {\n                return this.processedReceipts.get(txHash);\n            }\n\n            // Add to pending receipts\n            this.pendingReceipts.set(txHash, {\n                status: 'PENDING',\n                startTime: Date.now(),\n                retries: 0\n            });\n\n            // Wait for transaction receipt\n            const receipt = await this.waitForReceipt(txHash, provider, processingOptions);\n            \n            // Process the receipt\n            const processedReceipt = this.analyzeReceipt(receipt, txHash);\n            \n            // Store processed receipt\n            this.processedReceipts.set(txHash, processedReceipt);\n            this.pendingReceipts.delete(txHash);\n            \n            // Trigger success handler\n            this.triggerSuccessHandler(txHash, processedReceipt);\n            \n            return processedReceipt;\n\n        } catch (error) {\n            // Handle processing error\n            const errorReceipt = this.createErrorReceipt(txHash, error);\n            this.processedReceipts.set(txHash, errorReceipt);\n            this.pendingReceipts.delete(txHash);\n            \n            // Trigger error handler\n            this.triggerErrorHandler(txHash, errorReceipt);\n            \n            throw error;\n        }\n    }\n\n    /**\n     * Wait for transaction receipt\n     * @param {string} txHash - Transaction hash\n     * @param {Object} provider - Ethers provider\n     * @param {Object} options - Processing options\n     * @returns {Promise<Object>} Transaction receipt\n     */\n    async waitForReceipt(txHash, provider, options) {\n        const { maxRetries, retryDelay, confirmationBlocks, timeout } = options;\n        let retries = 0;\n\n        while (retries < maxRetries) {\n            try {\n                // Wait for transaction with confirmations\n                const receipt = await Promise.race([\n                    provider.waitForTransaction(txHash, confirmationBlocks),\n                    this.createTimeout(timeout)\n                ]);\n\n                if (receipt) {\n                    return receipt;\n                }\n\n            } catch (error) {\n                retries++;\n                \n                if (retries >= maxRetries) {\n                    throw new Error(`Failed to get receipt after ${maxRetries} retries: ${error.message}`);\n                }\n\n                // Wait before retry\n                await this.delay(retryDelay * retries);\n            }\n        }\n\n        throw new Error('Transaction receipt timeout');\n    }\n\n    /**\n     * Create timeout promise\n     * @param {number} timeout - Timeout in milliseconds\n     * @returns {Promise} Timeout promise\n     */\n    createTimeout(timeout) {\n        return new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Transaction timeout')), timeout);\n        });\n    }\n\n    /**\n     * Delay function\n     * @param {number} ms - Milliseconds to delay\n     * @returns {Promise} Delay promise\n     */\n    delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    /**\n     * Analyze transaction receipt\n     * @param {Object} receipt - Raw transaction receipt\n     * @param {string} txHash - Transaction hash\n     * @returns {Object} Analyzed receipt\n     */\n    analyzeReceipt(receipt, txHash) {\n        const analyzed = {\n            txHash,\n            status: receipt.status === 1 ? 'SUCCESS' : 'FAILED',\n            blockNumber: receipt.blockNumber,\n            blockHash: receipt.blockHash,\n            confirmations: receipt.confirmations,\n            gasUsed: receipt.gasUsed.toString(),\n            effectiveGasPrice: receipt.effectiveGasPrice.toString(),\n            cumulativeGasUsed: receipt.cumulativeGasUsed.toString(),\n            from: receipt.from,\n            to: receipt.to,\n            contractAddress: receipt.contractAddress,\n            logs: receipt.logs || [],\n            processedAt: new Date().toISOString(),\n            analysis: {\n                isSuccess: receipt.status === 1,\n                hasLogs: receipt.logs && receipt.logs.length > 0,\n                gasEfficiency: this.calculateGasEfficiency(receipt),\n                confirmationLevel: this.getConfirmationLevel(receipt.confirmations),\n                estimatedCost: this.estimateTransactionCost(receipt)\n            }\n        };\n\n        // Analyze logs if present\n        if (receipt.logs && receipt.logs.length > 0) {\n            analyzed.logAnalysis = this.analyzeLogs(receipt.logs);\n        }\n\n        return analyzed;\n    }\n\n    /**\n     * Calculate gas efficiency\n     * @param {Object} receipt - Transaction receipt\n     * @returns {Object} Gas efficiency metrics\n     */\n    calculateGasEfficiency(receipt) {\n        const gasUsed = parseInt(receipt.gasUsed.toString());\n        const gasPrice = parseInt(receipt.effectiveGasPrice.toString());\n        \n        return {\n            gasUsed,\n            gasPrice,\n            totalCost: gasUsed * gasPrice,\n            efficiency: gasUsed < 100000 ? 'HIGH' : gasUsed < 300000 ? 'MEDIUM' : 'LOW'\n        };\n    }\n\n    /**\n     * Get confirmation level\n     * @param {number} confirmations - Number of confirmations\n     * @returns {string} Confirmation level\n     */\n    getConfirmationLevel(confirmations) {\n        if (confirmations >= 12) return 'FINAL';\n        if (confirmations >= 6) return 'HIGH';\n        if (confirmations >= 3) return 'MEDIUM';\n        if (confirmations >= 1) return 'LOW';\n        return 'PENDING';\n    }\n\n    /**\n     * Estimate transaction cost\n     * @param {Object} receipt - Transaction receipt\n     * @returns {Object} Cost estimation\n     */\n    estimateTransactionCost(receipt) {\n        const gasUsed = parseInt(receipt.gasUsed.toString());\n        const gasPrice = parseInt(receipt.effectiveGasPrice.toString());\n        const totalWei = gasUsed * gasPrice;\n        \n        return {\n            wei: totalWei,\n            gwei: totalWei / 1e9,\n            eth: totalWei / 1e18,\n            usd: this.estimateUSD(totalWei)\n        };\n    }\n\n    /**\n     * Estimate USD value (placeholder)\n     * @param {number} wei - Wei amount\n     * @returns {number} USD estimate\n     */\n    estimateUSD(wei) {\n        // This would typically fetch current ETH price\n        const ethPrice = 2000; // Placeholder USD price\n        const ethAmount = wei / 1e18;\n        return ethAmount * ethPrice;\n    }\n\n    /**\n     * Analyze transaction logs\n     * @param {Array} logs - Transaction logs\n     * @returns {Object} Log analysis\n     */\n    analyzeLogs(logs) {\n        const analysis = {\n            totalLogs: logs.length,\n            eventTypes: {},\n            contractInteractions: [],\n            errors: []\n        };\n\n        logs.forEach((log, index) => {\n            // Count event types\n            const eventType = log.topics[0] || 'unknown';\n            analysis.eventTypes[eventType] = (analysis.eventTypes[eventType] || 0) + 1;\n\n            // Analyze contract interactions\n            if (log.address) {\n                analysis.contractInteractions.push({\n                    contract: log.address,\n                    topics: log.topics,\n                    data: log.data,\n                    index\n                });\n            }\n\n            // Check for error events\n            if (log.topics.some(topic => topic.includes('error') || topic.includes('fail'))) {\n                analysis.errors.push({\n                    logIndex: index,\n                    contract: log.address,\n                    topics: log.topics,\n                    data: log.data\n                });\n            }\n        });\n\n        return analysis;\n    }\n\n    /**\n     * Create error receipt\n     * @param {string} txHash - Transaction hash\n     * @param {Error} error - Error object\n     * @returns {Object} Error receipt\n     */\n    createErrorReceipt(txHash, error) {\n        return {\n            txHash,\n            status: 'ERROR',\n            error: {\n                message: error.message,\n                code: error.code || 'UNKNOWN',\n                stack: error.stack\n            },\n            processedAt: new Date().toISOString(),\n            analysis: {\n                isSuccess: false,\n                hasLogs: false,\n                gasEfficiency: null,\n                confirmationLevel: 'FAILED',\n                estimatedCost: null\n            }\n        };\n    }\n\n    /**\n     * Get receipt status\n     * @param {string} txHash - Transaction hash\n     * @returns {Object} Receipt status\n     */\n    getReceiptStatus(txHash) {\n        if (this.processedReceipts.has(txHash)) {\n            return this.processedReceipts.get(txHash);\n        }\n        \n        if (this.pendingReceipts.has(txHash)) {\n            return this.pendingReceipts.get(txHash);\n        }\n        \n        return { status: 'NOT_FOUND' };\n    }\n\n    /**\n     * Get all processed receipts\n     * @returns {Array} All processed receipts\n     */\n    getAllReceipts() {\n        return Array.from(this.processedReceipts.values());\n    }\n\n    /**\n     * Get pending receipts\n     * @returns {Array} Pending receipts\n     */\n    getPendingReceipts() {\n        return Array.from(this.pendingReceipts.entries()).map(([txHash, data]) => ({\n            txHash,\n            ...data\n        }));\n    }\n\n    /**\n     * Add success handler\n     * @param {string} txHash - Transaction hash\n     * @param {Function} handler - Success handler function\n     */\n    addSuccessHandler(txHash, handler) {\n        this.successHandlers.set(txHash, handler);\n    }\n\n    /**\n     * Add error handler\n     * @param {string} txHash - Transaction hash\n     * @param {Function} handler - Error handler function\n     */\n    addErrorHandler(txHash, handler) {\n        this.errorHandlers.set(txHash, handler);\n    }\n\n    /**\n     * Trigger success handler\n     * @param {string} txHash - Transaction hash\n     * @param {Object} receipt - Processed receipt\n     */\n    triggerSuccessHandler(txHash, receipt) {\n        const handler = this.successHandlers.get(txHash);\n        if (handler) {\n            try {\n                handler(receipt);\n            } catch (error) {\n                console.error('Error in success handler:', error);\n            }\n        }\n    }\n\n    /**\n     * Trigger error handler\n     * @param {string} txHash - Transaction hash\n     * @param {Object} receipt - Error receipt\n     */\n    triggerErrorHandler(txHash, receipt) {\n        const handler = this.errorHandlers.get(txHash);\n        if (handler) {\n            try {\n                handler(receipt);\n            } catch (error) {\n                console.error('Error in error handler:', error);\n            }\n        }\n    }\n\n    /**\n     * Clear processed receipts\n     * @param {number} maxAge - Maximum age in hours\n     */\n    clearOldReceipts(maxAge = 24) {\n        const cutoffTime = Date.now() - (maxAge * 60 * 60 * 1000);\n        \n        for (const [txHash, receipt] of this.processedReceipts.entries()) {\n            const receiptTime = new Date(receipt.processedAt).getTime();\n            if (receiptTime < cutoffTime) {\n                this.processedReceipts.delete(txHash);\n            }\n        }\n    }\n\n    /**\n     * Get receipt statistics\n     * @returns {Object} Receipt statistics\n     */\n    getReceiptStats() {\n        const receipts = this.getAllReceipts();\n        const stats = {\n            total: receipts.length,\n            byStatus: {},\n            byConfirmationLevel: {},\n            averageGasUsed: 0,\n            totalCost: 0\n        };\n\n        let totalGas = 0;\n        let totalCost = 0;\n\n        receipts.forEach(receipt => {\n            // Count by status\n            const status = receipt.status;\n            stats.byStatus[status] = (stats.byStatus[status] || 0) + 1;\n\n            // Count by confirmation level\n            const confirmationLevel = receipt.analysis?.confirmationLevel || 'UNKNOWN';\n            stats.byConfirmationLevel[confirmationLevel] = (stats.byConfirmationLevel[confirmationLevel] || 0) + 1;\n\n            // Calculate gas and cost\n            if (receipt.analysis?.gasEfficiency) {\n                totalGas += receipt.analysis.gasEfficiency.gasUsed;\n                totalCost += receipt.analysis.gasEfficiency.totalCost;\n            }\n        });\n\n        if (receipts.length > 0) {\n            stats.averageGasUsed = Math.round(totalGas / receipts.length);\n            stats.totalCost = totalCost;\n        }\n\n        return stats;\n    }\n\n    /**\n     * Export receipts\n     * @param {string} format - Export format (json, csv)\n     * @returns {string} Exported data\n     */\n    exportReceipts(format = 'json') {\n        const receipts = this.getAllReceipts();\n        \n        if (format === 'json') {\n            return JSON.stringify(receipts, null, 2);\n        } else if (format === 'csv') {\n            const headers = ['txHash', 'status', 'blockNumber', 'gasUsed', 'effectiveGasPrice', 'processedAt'];\n            const csvRows = [headers.join(',')];\n            \n            receipts.forEach(receipt => {\n                const row = [\n                    receipt.txHash,\n                    receipt.status,\n                    receipt.blockNumber || '',\n                    receipt.gasUsed || '',\n                    receipt.effectiveGasPrice || '',\n                    receipt.processedAt\n                ];\n                csvRows.push(row.join(','));\n            });\n            \n            return csvRows.join('\\n');\n        }\n        \n        return '';\n    }\n\n    /**\n     * Validate receipt format\n     * @param {Object} receipt - Receipt to validate\n     * @returns {Object} Validation result\n     */\n    validateReceipt(receipt) {\n        const errors = [];\n        const warnings = [];\n\n        // Required fields\n        if (!receipt.txHash) errors.push('Missing txHash');\n        if (!receipt.status) errors.push('Missing status');\n        if (!receipt.processedAt) errors.push('Missing processedAt');\n\n        // Status validation\n        if (receipt.status && !['SUCCESS', 'FAILED', 'ERROR', 'PENDING'].includes(receipt.status)) {\n            warnings.push('Invalid status value');\n        }\n\n        // Gas validation\n        if (receipt.gasUsed && isNaN(parseInt(receipt.gasUsed))) {\n            errors.push('Invalid gasUsed value');\n        }\n\n        return {\n            isValid: errors.length === 0,\n            errors,\n            warnings\n        };\n    }\n}\n\n// Export the class\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = ReceiptProcessor;\n}\n\n// Example usage:\n/*\nconst processor = new ReceiptProcessor({\n    maxRetries: 3,\n    retryDelay: 2000,\n    confirmationBlocks: 1\n});\n\n// Process a receipt\nconst receipt = await processor.processReceipt(\n    '0x1234...',\n    provider,\n    { timeout: 30000 }\n);\n\nconsole.log('Processed receipt:', receipt);\n\n// Add handlers\nprocessor.addSuccessHandler('0x1234...', (receipt) => {\n    console.log('Transaction successful:', receipt.txHash);\n});\n\nprocessor.addErrorHandler('0x1234...', (receipt) => {\n    console.log('Transaction failed:', receipt.error.message);\n});\n\n// Get statistics\nconst stats = processor.getReceiptStats();\nconsole.log('Receipt statistics:', stats);\n*/\n\n// Export an instance method for compatibility\nconst receiptProcessorInstance = new ReceiptProcessor();\nexport const processReceipt = receiptProcessorInstance.processReceipt.bind(receiptProcessorInstance);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Debug log console for elegant UI debugging.\n */\nconst logs = [];\nexport const LOG_LEVELS = { DEBUG: 'DEBUG', INFO: 'INFO', WARN: 'WARN', ERROR: 'ERROR' };\n\nexport function log(level, message) {\n    const entry = { level, message, time: new Date().toLocaleTimeString() };\n    logs.push(entry);\n    const consoleDiv = document.getElementById('debug-console');\n    if (consoleDiv) {\n        renderDebugConsole('debug-console');\n    }\n}\n\nexport function renderDebugConsole(containerId) {\n    const container = document.getElementById(containerId);\n    if (!container) return;\n    container.innerHTML = logs.map(l =>\n        `<div class=\"log-entry log-${l.level.toLowerCase()}\">\n            <span class=\"log-time\">[${l.time}]</span>\n            <span class=\"log-level\">${l.level}</span>:\n            <span class=\"log-message\">${l.message}</span>\n        </div>`\n    ).join('');\n}","/**\n * Connects to MetaMask and returns the user's account address.\n * Adds listeners for account and network changes.\n * @returns {Promise<string|null>} The connected account address or null if failed.\n */\nlet isConnecting = false;\n\nexport async function connectWallet() {\n    if (isConnecting) return;\n    isConnecting = true;\n    if (typeof window.ethereum === 'undefined') {\n        alert('MetaMask extension not found. Please install MetaMask to use this feature.');\n        return;\n    }\n    try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = accounts[0];\n        // Listen for account changes\n        window.ethereum.on('accountsChanged', (newAccounts) => {\n            window.location.reload(); // Simple way to refresh state\n        });\n        // Listen for network changes\n        window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n        });\n        return account;\n    } catch (err) {\n        // Do not alert, just return null\n        isConnecting = false;\n        return null;\n    }\n}\n\n// Example usage\n// (async () => {\n//     const account = await connectWallet();\n//     if (account) {\n//         console.log('Wallet connected:', account);\n//     } else {\n//         console.log('Failed to connect wallet.');\n//     }\n// })();\n","/**\n * Assigns a new session ID using browser crypto.\n * @returns {string}\n */\nexport function assignSessionID() {\n    if (window.crypto && window.crypto.randomUUID) {\n        const id = window.crypto.randomUUID();\n        sessionStorage.setItem('sessionID', id);\n        return id;\n    } else {\n        // Fallback for older browsers\n        const id = 'sess-' + Math.random().toString(36).substr(2, 9);\n        sessionStorage.setItem('sessionID', id);\n        return id;\n    }\n}\n","/**\n * Store, get, and remove temp data in localStorage.\n */\nexport function storeTempData(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n    }\n\nexport function getTempData(key) {\n    const v = localStorage.getItem(key);\n    try { return v ? JSON.parse(v) : null; } catch { return null; }\n}\n\nexport function removeTempData(key) {\n        localStorage.removeItem(key);\n}\n","/**\n * Converts a JS object to a memory format string (key:value;...)\n * @param {object} obj\n * @returns {string}\n */\nexport function jsonToMemFormat(obj) {\n    if (typeof obj !== 'object' || obj === null) return '';\n    let str = '';\n    for (const [k, v] of Object.entries(obj)) {\n        str += typeof v === 'object' && v !== null\n            ? jsonToMemFormat(v)\n            : `${k}:${v};`;\n        }\n    return str;\n}\n\n// Example usage\nconst exampleJson = {\n    name: 'Chip',\n    version: '1.0',\n    active: true,\n    details: {\n        manufacturer: 'TechCorp',\n        year: 2023\n    }\n};\n\ntry {\n    const memFormat = jsonToMemFormat(exampleJson);\n    console.log('Memory Format:', memFormat);\n} catch (error) {\n    console.error('Error converting JSON to memory format:', error.message);\n}\n","/**\n * Virtual Chip Signature System - Main Application Entry Point\n * \n * This file initializes the entire application and coordinates\n * between all the different modules (Frontend, Blockchain, Hardware).\n */\n\nimport { log, LOG_LEVELS } from '../frontend_ui/developer_debug_ui/debugLogConsole.js';\nimport { connectWallet } from '../frontend_ui/metamask_integration/connectWallet.js';\nimport { assignSessionID } from '../frontend_ui/session_handler/assignSessionID.js';\nimport { storeTempData, getTempData } from '../frontend_ui/js_memory/storeTempData.js';\nimport { updateStatus } from '../ui_feedback_module/Result_Display.js';\nimport { processReceipt } from '../ui_feedback_module/Receipt_Processor.js';\nimport { renderUserInputForm } from '../frontend_ui/input_form/userInputForm.js';\nimport { validateUserInput } from '../frontend_ui/input_form/validateUserInput.js';\nimport { jsonToMemFormat } from '../frontend_ui/format_handler/jsonToMemFormat.js';\nimport { generateInputMem } from '../frontend_ui/verilog_file_generator/generateInputMem.js';\nconst ethers = window.ethers;\n\n// Application state\nclass AppState {\n    constructor() {\n        this.walletConnected = false;\n        this.walletAddress = null;\n        this.sessionID = null;\n        this.chipStatus = 'offline';\n        this.networkStatus = 'disconnected';\n        this.currentSignature = null;\n        this.debugMode = false;\n    }\n}\n\n// Main application class\nclass VirtualChipSignatureApp {\n    constructor() {\n        this.state = new AppState();\n        this.modules = {};\n        this.pollStatusInterval = null;\n        this.init();\n    }\n\n    async init() {\n        try {\n            log('Initializing Virtual Chip Signature System...', LOG_LEVELS.INFO, 'APP_INIT');\n            \n            // Hide loading screen\n            this.hideLoadingScreen();\n            \n            // Initialize modules\n            await this.initializeModules();\n            \n            // Setup event listeners\n            this.setupEventListeners();\n            \n            // Restore session if available\n            await this.restoreSession();\n            \n            // Update UI\n            this.updateUI();\n            \n            log('Application initialized successfully', LOG_LEVELS.INFO, 'APP_INIT');\n            \n        } catch (error) {\n            log(`Initialization failed: ${error.message}`, LOG_LEVELS.ERROR, 'APP_INIT');\n        }\n    }\n\n    async initializeModules() {\n        log('Initializing application modules...', LOG_LEVELS.DEBUG, 'MODULES');\n        \n        // Initialize wallet connection\n        this.modules.wallet = {\n            connect: connectWallet,\n            isConnected: () => this.state.walletConnected\n        };\n\n        // Initialize session management\n        this.modules.session = {\n            assign: assignSessionID,\n            getCurrent: () => this.state.sessionID\n        };\n\n        // Initialize storage\n        this.modules.storage = {\n            store: storeTempData,\n            get: getTempData\n        };\n\n        // Initialize UI feedback\n        this.modules.ui = {\n            updateStatus,\n            processReceipt\n        };\n\n        log('Modules initialized successfully', LOG_LEVELS.DEBUG, 'MODULES');\n    }\n\n    setupEventListeners() {\n        log('Setting up event listeners...', LOG_LEVELS.DEBUG, 'EVENTS');\n\n        // Wallet connection\n        const connectWalletBtn = document.getElementById('connect-wallet-btn');\n        if (connectWalletBtn) {\n            connectWalletBtn.addEventListener('click', () => this.handleWalletConnection());\n        }\n\n        // Signature generation\n        const generateSignatureBtn = document.getElementById('generate-signature-btn');\n        if (generateSignatureBtn) {\n            generateSignatureBtn.addEventListener('click', () => this.handleSignatureGeneration());\n        }\n\n        // Signature verification\n        const verifySignatureBtn = document.getElementById('verify-signature-btn');\n        if (verifySignatureBtn) {\n            verifySignatureBtn.addEventListener('click', () => this.handleSignatureVerification());\n        }\n\n        // Debug toggle\n        const debugToggleBtn = document.getElementById('debug-toggle');\n        if (debugToggleBtn) {\n            debugToggleBtn.addEventListener('click', () => this.toggleDebugMode());\n        }\n\n        // Debug close\n        const debugCloseBtn = document.getElementById('debug-close');\n        if (debugCloseBtn) {\n            debugCloseBtn.addEventListener('click', () => this.toggleDebugMode());\n        }\n\n        // Form inputs\n        const dataInput = document.getElementById('data-input');\n        if (dataInput) {\n            dataInput.addEventListener('input', (e) => this.handleInputChange('data', e.target.value));\n        }\n\n        const privateKeyInput = document.getElementById('private-key-input');\n        if (privateKeyInput) {\n            privateKeyInput.addEventListener('input', (e) => this.handleInputChange('privateKey', e.target.value));\n        }\n\n        // --- Signature Verification Section ---\n        const verificationSection = document.getElementById('results-section');\n        if (verificationSection) {\n            const verifyFormHTML = `\n            <form id=\"verify-form\" class=\"classic-form\" style=\"margin-top:2rem;\">\n                <label for=\"verify-message\" class=\"form-label\">Message</label>\n                <textarea id=\"verify-message\" class=\"form-input\" rows=\"2\" placeholder=\"Enter the original message\" required></textarea>\n                <label for=\"verify-signature\" class=\"form-label\">Signature</label>\n                <input id=\"verify-signature\" class=\"form-input\" placeholder=\"Paste the signature (0x...)\" required />\n                <label for=\"verify-address\" class=\"form-label\">Signer Address (optional)</label>\n                <input id=\"verify-address\" class=\"form-input\" placeholder=\"0x... (leave blank to recover)\" />\n                <div style=\"display: flex; gap: 1rem;\">\n                    <button type=\"submit\" class=\"btn btn-secondary\">Verify (Local)</button>\n                    <button type=\"button\" id=\"verify-onchain-btn\" class=\"btn btn-primary\">Verify On-Chain</button>\n                </div>\n            </form>\n            <div id=\"verify-result\" class=\"output-field\" style=\"margin-top:1rem;\"></div>\n            <div id=\"onchain-result\" class=\"output-field\" style=\"margin-top:1rem;\"></div>\n            `;\n            verificationSection.insertAdjacentHTML('beforeend', verifyFormHTML);\n            const verifyForm = document.getElementById('verify-form');\n            const verifyResult = document.getElementById('verify-result');\n            const onchainResult = document.getElementById('onchain-result');\n            verifyForm.onsubmit = async (e) => {\n                e.preventDefault();\n                const message = document.getElementById('verify-message').value.trim();\n                const signature = document.getElementById('verify-signature').value.trim();\n                const address = document.getElementById('verify-address').value.trim();\n                if (!message || !signature) {\n                    verifyResult.textContent = 'Please provide both message and signature.';\n                    log('WARN', 'Verification input missing.');\n                    return;\n                }\n                try {\n                    let recovered;\n                    try {\n                        recovered = ethers.utils.verifyMessage(message, signature);\n                    } catch (err) {\n                        verifyResult.textContent = 'Invalid signature format.';\n                        log('ERROR', 'Invalid signature format.');\n                        return;\n                    }\n                    let valid = false;\n                    if (address) {\n                        valid = (recovered.toLowerCase() === address.toLowerCase());\n                    } else {\n                        valid = !!recovered;\n                    }\n                    verifyResult.innerHTML = valid\n                        ? `<span style='color:green;font-weight:600;'>✓ Signature is valid (local)</span><br>Recovered address: <code>${recovered}</code>`\n                        : `<span style='color:red;font-weight:600;'>✗ Signature is invalid (local)</span><br>Recovered address: <code>${recovered}</code>`;\n                    log('INFO', `Signature verification (local): ${valid ? 'valid' : 'invalid'} (recovered: ${recovered})`);\n                    // Log to backend\n                    fetch('http://localhost:4000/log', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify({\n                            type: 'local',\n                            message,\n                            signature,\n                            address,\n                            recovered,\n                            result: valid ? 'valid' : 'invalid'\n                        })\n                    })\n                    .then(res => res.json())\n                    .then(data => log('INFO', 'Logged to backend: ' + JSON.stringify(data)))\n                    .catch(err => log('ERROR', 'Failed to log to backend: ' + err.message));\n                } catch (err) {\n                    verifyResult.textContent = 'Verification failed: ' + err.message;\n                    log('ERROR', 'Verification failed: ' + err.message);\n                }\n            };\n            // On-chain verification\n            const verifyOnchainBtn = document.getElementById('verify-onchain-btn');\n            if (verifyOnchainBtn) {\n                verifyOnchainBtn.onclick = async () => {\n                    const message = document.getElementById('verify-message').value.trim();\n                    const signature = document.getElementById('verify-signature').value.trim();\n                    const address = document.getElementById('verify-address').value.trim();\n                    if (!message || !signature || !address) {\n                        onchainResult.textContent = 'Please provide message, signature, and signer address for on-chain verification.';\n                        log('WARN', 'On-chain verification input missing.');\n                        return;\n                    }\n                    const contractAddress = prompt('Enter SignatureVerifier contract address:');\n                    if (!contractAddress) {\n                        onchainResult.textContent = 'Contract address is required.';\n                        log('WARN', 'No contract address provided.');\n                        return;\n                    }\n                    try {\n                        if (!window.ethereum) {\n                            onchainResult.textContent = 'MetaMask is required for on-chain verification.';\n                            log('ERROR', 'MetaMask not found.');\n                            return;\n                        }\n                        const provider = new ethers.BrowserProvider(window.ethereum);\n                        const signer = await provider.getSigner();\n                        const contract = new ethers.Contract(\n                            contractAddress,\n                            [\n                                'function verifySignature(address,string,bytes) public returns (bool)'\n                            ],\n                            signer\n                        );\n                        // Convert signature to bytes\n                        const sigBytes = ethers.getBytes(signature);\n                        onchainResult.textContent = 'Verifying on-chain...';\n                        log('INFO', 'Calling verifySignature on-chain...');\n                        const tx = await contract.verifySignature(address, message, sigBytes);\n                        const receipt = await tx.wait();\n                        // Check event logs for SignatureVerified\n                        let found = false;\n                        for (const logEntry of receipt.logs) {\n                            try {\n                                const parsed = contract.interface.parseLog(logEntry);\n                                if (parsed.name === 'SignatureVerified') {\n                                    found = true;\n                                    onchainResult.innerHTML = `<span style='color:green;font-weight:600;'>✓ Signature is valid (on-chain)</span><br>Tx Hash: <code>${receipt.transactionHash}</code>`;\n                                    log('INFO', `Signature verified on-chain. Tx: ${receipt.transactionHash}`);\n                                    // Log to backend\n                                    fetch('http://localhost:4000/log', {\n                                        method: 'POST',\n                                        headers: { 'Content-Type': 'application/json' },\n                                        body: JSON.stringify({\n                                            type: 'on-chain',\n                                            message,\n                                            signature,\n                                            address,\n                                            txHash: receipt.transactionHash,\n                                            result: 'valid'\n                                        })\n                                    })\n                                    .then(res => res.json())\n                                    .then(data => log('INFO', 'Logged to backend: ' + JSON.stringify(data)))\n                                    .catch(err => log('ERROR', 'Failed to log to backend: ' + err.message));\n                                    break;\n                                }\n                            } catch {}\n                        }\n                        if (!found) {\n                            onchainResult.innerHTML = `<span style='color:red;font-weight:600;'>✗ Signature is invalid (on-chain)</span><br>Tx Hash: <code>${receipt.transactionHash}</code>`;\n                            log('INFO', `Signature invalid on-chain. Tx: ${receipt.transactionHash}`);\n                            // Log to backend\n                            fetch('http://localhost:4000/log', {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify({\n                                    type: 'on-chain',\n                                    message,\n                                    signature,\n                                    address,\n                                    txHash: receipt.transactionHash,\n                                    result: 'invalid'\n                                })\n                            })\n                            .then(res => res.json())\n                            .then(data => log('INFO', 'Logged to backend: ' + JSON.stringify(data)))\n                            .catch(err => log('ERROR', 'Failed to log to backend: ' + err.message));\n                        }\n                    } catch (err) {\n                        onchainResult.textContent = 'On-chain verification failed: ' + err.message;\n                        log('ERROR', 'On-chain verification failed: ' + err.message);\n                    }\n                };\n            }\n        }\n\n        log('Event listeners setup complete', LOG_LEVELS.DEBUG, 'EVENTS');\n    }\n\n    async handleWalletConnection() {\n        try {\n            await this.modules.wallet.connect();\n            this.state.walletConnected = true;\n            this.updateUI();\n            this.startStatusPolling();\n            this.setupMetaMaskListeners();\n            // Now check blockchain status\n            checkBlockchainStatus();\n        } catch (error) {\n            log('Wallet connection failed: ' + error.message, LOG_LEVELS.ERROR, 'WALLET');\n        }\n    }\n\n    startStatusPolling() {\n        if (this.pollStatusInterval) return;\n        pollStatus(); // poll once immediately\n        this.pollStatusInterval = setInterval(pollStatus, 5000);\n    }\n\n    setupMetaMaskListeners() {\n        if (window.ethereum) {\n            window.ethereum.on('connect', checkBlockchainStatus);\n            window.ethereum.on('accountsChanged', checkBlockchainStatus);\n            window.ethereum.on('chainChanged', checkBlockchainStatus);\n        }\n    }\n\n    async handleSignatureGeneration() {\n        try {\n            // Wallet connection is NOT required for signature generation\n            const dataInput = document.getElementById('data-input');\n            const message = dataInput?.value?.trim();\n            if (!message) {\n                log('[WARN] No message provided for signature generation.', LOG_LEVELS.WARN, 'SIGNATURE');\n                return;\n            }\n            log('[DEBUG] Generating signature for message: ' + message, LOG_LEVELS.DEBUG, 'SIGNATURE');\n            // Real signature generation via backend\n            const response = await fetch('http://localhost:4000/sign', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ message })\n            });\n            log('[DEBUG] Awaiting backend response...', LOG_LEVELS.DEBUG, 'SIGNATURE');\n            const data = await response.json();\n            log('[DEBUG] Backend response: ' + JSON.stringify(data), LOG_LEVELS.DEBUG, 'SIGNATURE');\n            if (!data.success) throw new Error(data.error || 'Signature generation failed');\n            const realSignature = {\n                message: message,\n                signature: data.signature,\n                hash: data.hash,\n                publicKey: data.publicKey,\n                timestamp: new Date().toISOString(),\n                r: data.r,\n                s: data.s,\n                v: data.v\n            };\n            this.state.currentSignature = realSignature;\n            this.modules.storage.store('currentSignature', realSignature);\n            this.updateSignatureOutput(realSignature);\n\n            // Update Keccak hash output\n            const hashOutput = document.getElementById('hash-output');\n            if (hashOutput) {\n                log('[DEBUG] Updating Keccak output: ' + data.hash, LOG_LEVELS.DEBUG, 'SIGNATURE');\n                hashOutput.innerHTML = `<code>${data.hash}</code>`;\n            }\n            // Update ECDSA r, s, v outputs if present\n            if (data.r && data.s && typeof data.v !== 'undefined') {\n                const rBox = document.getElementById('ecdsa-r');\n                const sBox = document.getElementById('ecdsa-s');\n                const vBox = document.getElementById('ecdsa-v');\n                log(`[DEBUG] Updating ECDSA outputs: r=${data.r}, s=${data.s}, v=${data.v}`, LOG_LEVELS.DEBUG, 'SIGNATURE');\n                if (rBox) rBox.innerHTML = `<code>${data.r}</code>`;\n                if (sBox) sBox.innerHTML = `<code>${data.s}</code>`;\n                if (vBox) vBox.innerHTML = `<code>${data.v}</code>`;\n            } else {\n                log('[WARN] ECDSA r, s, v missing from backend response.', LOG_LEVELS.WARN, 'SIGNATURE');\n            }\n            log('Signature generated successfully', LOG_LEVELS.INFO, 'SIGNATURE');\n        } catch (error) {\n            log(`Signature generation failed: ${error.message}`, LOG_LEVELS.ERROR, 'SIGNATURE');\n        }\n    }\n\n    async handleSignatureVerification() {\n        try {\n            if (!this.state.currentSignature) {\n                return;\n            }\n\n            log('Verifying signature...', LOG_LEVELS.INFO, 'VERIFICATION');\n\n            // TODO: Implement actual signature verification\n            // For now, simulate the process\n            await this.simulateSignatureVerification();\n            \n        } catch (error) {\n            log(`Signature verification failed: ${error.message}`, LOG_LEVELS.ERROR, 'VERIFICATION');\n        }\n    }\n\n    async simulateSignatureVerification() {\n        // Simulate verification process\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Mock verification result\n        const verificationResult = {\n            isValid: true,\n            message: 'Signature verified successfully',\n            timestamp: new Date().toISOString(),\n            verifiedBy: 'Virtual Chip System'\n        };\n\n        // Update UI\n        this.updateVerificationOutput(verificationResult);\n        \n        log('Signature verified successfully', LOG_LEVELS.INFO, 'VERIFICATION');\n    }\n\n    handleInputChange(field, value) {\n        log(`Input changed: ${field} = ${value ? '[REDACTED]' : 'empty'}`, LOG_LEVELS.DEBUG, 'INPUT');\n        this.modules.storage.store(`input_${field}`, value);\n    }\n\n    toggleDebugMode() {\n        this.state.debugMode = !this.state.debugMode;\n        const debugPanel = document.getElementById('debug-panel');\n        \n        if (debugPanel) {\n            debugPanel.style.display = this.state.debugMode ? 'block' : 'none';\n        }\n        \n        log(`Debug mode ${this.state.debugMode ? 'enabled' : 'disabled'}`, LOG_LEVELS.DEBUG, 'DEBUG');\n    }\n\n    async restoreSession() {\n        try {\n            const savedSession = this.modules.storage.get('sessionID');\n            if (savedSession) {\n                this.state.sessionID = savedSession;\n                log(`Session restored: ${savedSession}`, LOG_LEVELS.DEBUG, 'SESSION');\n            } else {\n                // Create new session\n                this.state.sessionID = await this.modules.session.assign();\n                this.modules.storage.store('sessionID', this.state.sessionID);\n                log(`New session created: ${this.state.sessionID}`, LOG_LEVELS.DEBUG, 'SESSION');\n            }\n        } catch (error) {\n            log(`Session restoration failed: ${error.message}`, LOG_LEVELS.WARN, 'SESSION');\n        }\n    }\n\n    updateUI() {\n        // Update wallet status\n        const walletStatus = document.getElementById('wallet-status');\n        if (walletStatus) {\n            walletStatus.textContent = this.state.walletConnected ? 'Connected' : 'Disconnected';\n            walletStatus.className = `status-indicator ${this.state.walletConnected ? 'online' : 'offline'}`;\n        }\n\n        // Update network status\n        const networkStatus = document.getElementById('network-status');\n        if (networkStatus) {\n            networkStatus.textContent = this.state.networkStatus === 'connected' ? 'Connected' : 'Disconnected';\n            networkStatus.className = `status-indicator ${this.state.networkStatus === 'connected' ? 'online' : 'offline'}`;\n        }\n\n        // Update session status\n        const sessionStatus = document.getElementById('session-status');\n        if (sessionStatus) {\n            sessionStatus.textContent = this.state.sessionID ? 'Active' : 'No Session';\n            sessionStatus.className = `status-indicator ${this.state.sessionID ? 'online' : 'offline'}`;\n        }\n\n        // Update chip status\n        const chipStatus = document.getElementById('chip-status');\n        if (chipStatus) {\n            chipStatus.textContent = this.state.chipStatus === 'online' ? 'Online' : 'Offline';\n            chipStatus.className = `status-indicator ${this.state.chipStatus === 'online' ? 'online' : 'offline'}`;\n        }\n\n        // Update connect wallet button\n        const connectWalletBtn = document.getElementById('connect-wallet-btn');\n        if (connectWalletBtn) {\n            connectWalletBtn.textContent = this.state.walletConnected ? 'Wallet Connected' : 'Connect Wallet';\n            connectWalletBtn.disabled = this.state.walletConnected;\n        }\n    }\n\n    updateSignatureOutput(signature) {\n        // Clear and update all output fields\n        const rBox = document.getElementById('ecdsa-r');\n        const sBox = document.getElementById('ecdsa-s');\n        const vBox = document.getElementById('ecdsa-v');\n        const addressOutput = document.getElementById('address-output');\n        const signatureOutput = document.getElementById('signature-output');\n\n        if (rBox) rBox.innerHTML = `<code>${signature.r ? signature.r : '-'}</code>`;\n        if (sBox) sBox.innerHTML = `<code>${signature.s ? signature.s : '-'}</code>`;\n        if (vBox) vBox.innerHTML = `<code>${typeof signature.v !== 'undefined' ? signature.v : '-'}</code>`;\n        if (addressOutput) addressOutput.innerHTML = `<code>${signature.publicKey ? signature.publicKey : '-'}</code>`;\n        if (signatureOutput) {\n            signatureOutput.innerHTML = `\n                <div class=\"signature-details\">\n                    <p><strong>Signature:</strong> <code id=\"signature-value\">${signature.signature ? signature.signature : '-'}</code></p>\n                    <button id=\"copy-signature-btn\" class=\"btn btn-small\" style=\"margin-top:0.5em;\">Copy</button>\n                </div>\n            `;\n            // Add event listener for copy button\n            const copyBtn = document.getElementById('copy-signature-btn');\n            if (copyBtn) {\n                copyBtn.onclick = () => {\n                    const sig = signature.signature ? signature.signature : '';\n                    navigator.clipboard.writeText(sig);\n                };\n            }\n            // Add event listener for sending to Sepolia\n            const sendBtn = document.getElementById('send-to-chain-btn');\n            if (sendBtn) {\n                sendBtn.onclick = () => this.sendSignatureToSepolia(signature);\n            }\n        }\n    }\n\n    async sendSignatureToSepolia(signature) {\n        try {\n            if (!window.ethereum) {\n                return;\n            }\n            const contractAddress = prompt('Enter SignatureVerifier contract address (Sepolia):');\n            if (!contractAddress) {\n                return;\n            }\n            // Minimal ABI for demonstration\n            const contractABI = [\n                'function submitSignature(string message, bytes signature, address signer) public returns (bool)'\n            ];\n            const provider = new ethers.BrowserProvider(window.ethereum);\n            await provider.send('eth_requestAccounts', []);\n            const signerObj = await provider.getSigner();\n            const contract = new ethers.Contract(contractAddress, contractABI, signerObj);\n            // Convert signature to bytes\n            const sigBytes = ethers.getBytes(signature.signature);\n            const tx = await contract.submitSignature(signature.message, sigBytes, signature.publicKey);\n            const receipt = await tx.wait();\n            // Optionally, update UI with transaction hash\n            const signatureOutput = document.getElementById('signature-output');\n            if (signatureOutput) {\n                signatureOutput.innerHTML += `<p><strong>Tx Hash:</strong> <code>${receipt.transactionHash}</code></p>`;\n            }\n        } catch (error) {\n            log('Failed to send transaction: ' + error.message, LOG_LEVELS.ERROR, 'CHAIN');\n        }\n    }\n\n    updateVerificationOutput(result) {\n        const verificationOutput = document.getElementById('verification-output');\n        if (verificationOutput) {\n            verificationOutput.innerHTML = `\n                <div class=\"verification-details\">\n                    <p><strong>Status:</strong> <span class=\"${result.isValid ? 'valid' : 'invalid'}\">${result.isValid ? '✓ Valid' : '✗ Invalid'}</span></p>\n                    <p><strong>Message:</strong> ${result.message}</p>\n                    <p><strong>Verified By:</strong> ${result.verifiedBy}</p>\n                    <p><strong>Timestamp:</strong> ${new Date(result.timestamp).toLocaleString()}</p>\n                </div>\n            `;\n        }\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen');\n        const app = document.getElementById('app');\n        \n        if (loadingScreen) {\n            loadingScreen.style.display = 'none';\n        }\n        \n        if (app) {\n            app.style.display = 'block';\n        }\n    }\n}\n\n// Initialize application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.app = new VirtualChipSignatureApp();\n});\n\n// Export for module usage\nexport default VirtualChipSignatureApp;\n\n// Ensure setStatus is defined before pollStatus\nfunction setStatus(id, status) {\n    const el = document.getElementById(id);\n    if (!el) return;\n    if (status === 'online' || status === 'active') {\n        el.textContent = id.replace('-status', '').replace(/\\b\\w/g, l => l.toUpperCase()) + ' Online';\n        el.className = 'status-indicator online';\n    } else {\n        el.textContent = id.replace('-status', '').replace(/\\b\\w/g, l => l.toUpperCase()) + ' Offline';\n        el.className = 'status-indicator offline';\n    }\n}\n\n// Real blockchain status check\nasync function checkBlockchainStatus() {\n    if (window.ethereum) {\n        try {\n            // Check if MetaMask is connected\n            const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n            // Check if on Sepolia (chainId 0xaa36a7)\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n            if (accounts.length > 0 && chainId === '0xaa36a7') {\n                setStatus('blockchain-status', 'online');\n            } else {\n                setStatus('blockchain-status', 'offline');\n            }\n        } catch (e) {\n            setStatus('blockchain-status', 'offline');\n        }\n    } else {\n        setStatus('blockchain-status', 'offline');\n    }\n}\n\n// Update pollStatus to only update backend/chip status\nasync function pollStatus() {\n    try {\n        const res = await fetch('http://localhost:4000/api/status');\n        const status = await res.json();\n        setStatus('backend-status', status.backend ? 'online' : 'offline');\n        setStatus('chip-status', status.chip ? 'online' : 'offline');\n    } catch (e) {\n        setStatus('backend-status', 'offline');\n        setStatus('chip-status', 'offline');\n    }\n    // Do NOT call checkBlockchainStatus here\n}\n\n// Helper to reset ECDSA output fields\nfunction resetEcdsaOutputs() {\n    document.getElementById('ecdsa-r').innerHTML = '<p class=\"placeholder\">Not yet generated</p>';\n    document.getElementById('ecdsa-s').innerHTML = '<p class=\"placeholder\">Not yet generated</p>';\n    document.getElementById('ecdsa-v').innerHTML = '<p class=\"placeholder\">Not yet generated</p>';\n}\n\n// Helper to reset signature output\nfunction resetSignatureOutput() {\n    document.getElementById('signature-output').innerHTML = '<p class=\"placeholder\">Not yet generated</p>';\n    document.getElementById('address-output').innerHTML = '<p class=\"placeholder\">Not yet generated</p>';\n}\n\n// At the end of the file, always poll backend/chip status\nsetInterval(pollStatus, 5000);\npollStatus(); "],"names":["ResultDisplay","containerId","arguments","length","undefined","options","_classCallCheck","this","container","_objectSpread","theme","animations","autoHide","autoHideDelay","maxResults","results","currentResult","autoHideTimer","init","key","value","createContainer","createUI","bindEvents","applyTheme","existing","document","getElementById","remove","createElement","id","className","style","cssText","body","appendChild","_this","header","title","textContent","controls","display","gap","minimizeBtn","innerHTML","onclick","minimize","closeBtn","hide","content","statusBar","updateStatus","_this2","addEventListener","e","ctrlKey","shiftKey","preventDefault","toggle","clearTimeout","setTimeout","background","color","result","unshift","pop","renderResult","show","renderTransactionResult","error","errorResult","type","timestamp","Date","toISOString","message","details","severity","renderError","_result$signature","_result$signature2","_result$signature3","resultCard","toLocaleTimeString","hashSection","createDetailSection","hash","signatureSection","R","signature","r","substring","S","s","V","v","validation","_result$validation$er","validationSection","Status","isValid","Errors","errors","metadata","Object","keys","metadataSection","actions","createActionButtons","_result$analysis","_result$analysis2","_result$analysis3","concat","status","processedAt","txHash","blockSection","Number","blockNumber","Confirmations","confirmations","Level","analysis","confirmationLevel","gasSection","Used","gasUsed","Price","effectiveGasPrice","parseInt","Efficiency","gasEfficiency","efficiency","estimatedCost","costSection","ETH","eth","toFixed","USD","usd","Gwei","gwei","createTransactionActions","errorCard","detailsText","JSON","stringify","createErrorActions","data","section","sectionTitle","entries","forEach","_ref","_ref2","_slicedToArray","item","label","val","_this3","copyBtn","copyToClipboard","exportBtn","exportResult","_this4","explorerBtn","openExplorer","_this5","retryBtn","retryOperation","reportBtn","reportError","text","navigator","clipboard","writeText","then","exportTime","blob","Blob","url","URL","createObjectURL","a","href","download","split","click","revokeObjectURL","explorerUrl","window","open","totalResults","successCount","filter","errorCount","now","transform","_this6","height","byType","reduce","acc","byStatus","module","exports","resultDisplayInstance","bind","t","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","create","_regeneratorDefine2","f","p","y","G","d","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","_asyncToGenerator","apply","_next","_throw","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","push","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","_typeof","toPrimitive","String","_toPrimitive","ReceiptProcessor","maxRetries","retryDelay","confirmationBlocks","timeout","pendingReceipts","Map","processedReceipts","errorHandlers","successHandlers","_processReceipt","_callee","provider","processingOptions","receipt","processedReceipt","errorReceipt","_t","_args","_context","has","get","set","startTime","retries","waitForReceipt","analyzeReceipt","triggerSuccessHandler","createErrorReceipt","triggerErrorHandler","_x","_x2","_waitForReceipt","_callee2","_t2","_context2","race","waitForTransaction","createTimeout","Error","delay","_x3","_x4","_x5","_","reject","ms","analyzed","blockHash","toString","cumulativeGasUsed","from","to","contractAddress","logs","isSuccess","hasLogs","calculateGasEfficiency","getConfirmationLevel","estimateTransactionCost","logAnalysis","analyzeLogs","gasPrice","totalCost","totalWei","wei","estimateUSD","totalLogs","eventTypes","contractInteractions","log","index","eventType","topics","address","contract","some","topic","includes","logIndex","code","stack","Array","values","map","handler","console","_step","maxAge","cutoffTime","_iterator","_createForOfIteratorHelper","_step$value","getTime","err","receipts","getAllReceipts","stats","total","byConfirmationLevel","averageGasUsed","totalGas","_receipt$analysis","_receipt$analysis2","Math","round","format","csvRows","join","row","warnings","isNaN","receiptProcessorInstance","processReceipt","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","definition","hmd","children","obj","prop","hasOwnProperty","LOG_LEVELS","level","entry","time","toLowerCase","isConnecting","connectWallet","_connectWallet","accounts","account","ethereum","alert","request","method","on","newAccounts","location","reload","assignSessionID","crypto","randomUUID","sessionStorage","setItem","random","substr","storeTempData","localStorage","getTempData","getItem","parse","_unused","memFormat","jsonToMemFormat","str","_i","_Object$entries","_Object$entries$_i","k","name","version","active","manufacturer","year","_createClass","ethers","AppState","walletConnected","walletAddress","sessionID","chipStatus","networkStatus","currentSignature","debugMode","VirtualChipSignatureApp","state","modules","pollStatusInterval","_init","hideLoadingScreen","initializeModules","setupEventListeners","restoreSession","updateUI","_initializeModules","wallet","connect","isConnected","session","assign","getCurrent","storage","store","ui","connectWalletBtn","handleWalletConnection","generateSignatureBtn","handleSignatureGeneration","verifySignatureBtn","handleSignatureVerification","debugToggleBtn","toggleDebugMode","debugCloseBtn","dataInput","handleInputChange","target","privateKeyInput","verificationSection","insertAdjacentHTML","verifyForm","verifyResult","onchainResult","onsubmit","_callee3","recovered","valid","_t3","_context3","trim","utils","verifyMessage","fetch","headers","res","json","verifyOnchainBtn","_callee4","signer","sigBytes","tx","found","logEntry","_t5","_t6","_context4","prompt","BrowserProvider","getSigner","Contract","getBytes","verifySignature","wait","parseLog","transactionHash","_handleWalletConnection","_callee5","_context5","startStatusPolling","setupMetaMaskListeners","checkBlockchainStatus","pollStatus","setInterval","_handleSignatureGeneration","_callee6","_dataInput$value","response","realSignature","hashOutput","rBox","sBox","vBox","_t8","_context6","success","publicKey","updateSignatureOutput","_handleSignatureVerification","_callee7","_t9","_context7","simulateSignatureVerification","_simulateSignatureVerification","_callee8","verificationResult","_context8","verifiedBy","updateVerificationOutput","field","debugPanel","_restoreSession","_callee9","savedSession","_t0","_context9","walletStatus","sessionStatus","disabled","addressOutput","signatureOutput","sig","sendBtn","sendSignatureToSepolia","_sendSignatureToSepolia","_callee0","contractABI","signerObj","_context0","send","submitSignature","verificationOutput","toLocaleString","loadingScreen","app","setStatus","el","replace","toUpperCase","_checkBlockchainStatus","_callee1","chainId","_context1","_pollStatus","_callee10","_context10","backend","chip"],"sourceRoot":""}